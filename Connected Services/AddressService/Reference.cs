//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PersoneManagement.Web.AddressService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDTO", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorks.Model")]
    [System.SerializableAttribute()]
    public partial class AddressDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressLine2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressesTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressessFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BusinessEntityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateProvinceIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatesProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid rowguidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((this.AddressIDField.Equals(value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine1 {
            get {
                return this.AddressLine1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine1Field, value) != true)) {
                    this.AddressLine1Field = value;
                    this.RaisePropertyChanged("AddressLine1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressLine2 {
            get {
                return this.AddressLine2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddressLine2Field, value) != true)) {
                    this.AddressLine2Field = value;
                    this.RaisePropertyChanged("AddressLine2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressesTypeName {
            get {
                return this.AddressesTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressesTypeNameField, value) != true)) {
                    this.AddressesTypeNameField = value;
                    this.RaisePropertyChanged("AddressesTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressessFullName {
            get {
                return this.AddressessFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressessFullNameField, value) != true)) {
                    this.AddressessFullNameField = value;
                    this.RaisePropertyChanged("AddressessFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BusinessEntityID {
            get {
                return this.BusinessEntityIDField;
            }
            set {
                if ((this.BusinessEntityIDField.Equals(value) != true)) {
                    this.BusinessEntityIDField = value;
                    this.RaisePropertyChanged("BusinessEntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateProvinceID {
            get {
                return this.StateProvinceIDField;
            }
            set {
                if ((this.StateProvinceIDField.Equals(value) != true)) {
                    this.StateProvinceIDField = value;
                    this.RaisePropertyChanged("StateProvinceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatesProvinceName {
            get {
                return this.StatesProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatesProvinceNameField, value) != true)) {
                    this.StatesProvinceNameField = value;
                    this.RaisePropertyChanged("StatesProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid rowguid {
            get {
                return this.rowguidField;
            }
            set {
                if ((this.rowguidField.Equals(value) != true)) {
                    this.rowguidField = value;
                    this.RaisePropertyChanged("rowguid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorks.Model")]
    [System.SerializableAttribute()]
    public partial class AddressTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AddressTypeID {
            get {
                return this.AddressTypeIDField;
            }
            set {
                if ((this.AddressTypeIDField.Equals(value) != true)) {
                    this.AddressTypeIDField = value;
                    this.RaisePropertyChanged("AddressTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AddressService.IAddressService")]
    public interface IAddressService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressesByBusinessId", ReplyAction="http://tempuri.org/IAddressService/GetAddressesByBusinessIdResponse")]
        PersoneManagement.Web.AddressService.AddressDTO[] GetAddressesByBusinessId(int businessEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressesByBusinessId", ReplyAction="http://tempuri.org/IAddressService/GetAddressesByBusinessIdResponse")]
        System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressDTO[]> GetAddressesByBusinessIdAsync(int businessEntityId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressById", ReplyAction="http://tempuri.org/IAddressService/GetAddressByIdResponse")]
        PersoneManagement.Web.AddressService.AddressDTO GetAddressById(int id, int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressById", ReplyAction="http://tempuri.org/IAddressService/GetAddressByIdResponse")]
        System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressDTO> GetAddressByIdAsync(int id, int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressTypes", ReplyAction="http://tempuri.org/IAddressService/GetAddressTypesResponse")]
        PersoneManagement.Web.AddressService.AddressTypeDTO[] GetAddressTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/GetAddressTypes", ReplyAction="http://tempuri.org/IAddressService/GetAddressTypesResponse")]
        System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressTypeDTO[]> GetAddressTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/AddAddress", ReplyAction="http://tempuri.org/IAddressService/AddAddressResponse")]
        void AddAddress(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/AddAddress", ReplyAction="http://tempuri.org/IAddressService/AddAddressResponse")]
        System.Threading.Tasks.Task AddAddressAsync(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/UpdateAddress", ReplyAction="http://tempuri.org/IAddressService/UpdateAddressResponse")]
        void UpdateAddress(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID, System.Guid oldGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/UpdateAddress", ReplyAction="http://tempuri.org/IAddressService/UpdateAddressResponse")]
        System.Threading.Tasks.Task UpdateAddressAsync(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID, System.Guid oldGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/DeleteAddress", ReplyAction="http://tempuri.org/IAddressService/DeleteAddressResponse")]
        void DeleteAddress(int id, int businessEntityID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddressService/DeleteAddress", ReplyAction="http://tempuri.org/IAddressService/DeleteAddressResponse")]
        System.Threading.Tasks.Task DeleteAddressAsync(int id, int businessEntityID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddressServiceChannel : PersoneManagement.Web.AddressService.IAddressService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddressServiceClient : System.ServiceModel.ClientBase<PersoneManagement.Web.AddressService.IAddressService>, PersoneManagement.Web.AddressService.IAddressService {
        
        public AddressServiceClient() {
        }
        
        public AddressServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddressServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public PersoneManagement.Web.AddressService.AddressDTO[] GetAddressesByBusinessId(int businessEntityId) {
            return base.Channel.GetAddressesByBusinessId(businessEntityId);
        }
        
        public System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressDTO[]> GetAddressesByBusinessIdAsync(int businessEntityId) {
            return base.Channel.GetAddressesByBusinessIdAsync(businessEntityId);
        }
        
        public PersoneManagement.Web.AddressService.AddressDTO GetAddressById(int id, int businessEntityID) {
            return base.Channel.GetAddressById(id, businessEntityID);
        }
        
        public System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressDTO> GetAddressByIdAsync(int id, int businessEntityID) {
            return base.Channel.GetAddressByIdAsync(id, businessEntityID);
        }
        
        public PersoneManagement.Web.AddressService.AddressTypeDTO[] GetAddressTypes() {
            return base.Channel.GetAddressTypes();
        }
        
        public System.Threading.Tasks.Task<PersoneManagement.Web.AddressService.AddressTypeDTO[]> GetAddressTypesAsync() {
            return base.Channel.GetAddressTypesAsync();
        }
        
        public void AddAddress(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID) {
            base.Channel.AddAddress(addressDTO, businessEntityID);
        }
        
        public System.Threading.Tasks.Task AddAddressAsync(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID) {
            return base.Channel.AddAddressAsync(addressDTO, businessEntityID);
        }
        
        public void UpdateAddress(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID, System.Guid oldGuid) {
            base.Channel.UpdateAddress(addressDTO, businessEntityID, oldGuid);
        }
        
        public System.Threading.Tasks.Task UpdateAddressAsync(PersoneManagement.Web.AddressService.AddressDTO addressDTO, int businessEntityID, System.Guid oldGuid) {
            return base.Channel.UpdateAddressAsync(addressDTO, businessEntityID, oldGuid);
        }
        
        public void DeleteAddress(int id, int businessEntityID) {
            base.Channel.DeleteAddress(id, businessEntityID);
        }
        
        public System.Threading.Tasks.Task DeleteAddressAsync(int id, int businessEntityID) {
            return base.Channel.DeleteAddressAsync(id, businessEntityID);
        }
    }
}
